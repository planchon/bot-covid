{"version":3,"sources":["components/ChatBox/Header/Header.js","components/ChatBox/ChatOnline/ChatOnline.js","components/ChatBox/ChatContent/ChatContent.js","components/ChatBox/ChatInput/ChatInput.js","components/ChatBox/ChatBox.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","width","height","viewBox","fill","xmlns","d","ChatOnline","online","ChatContent","chatContentElement","messages","ref","map","client","i","key","date","username","message","ChatInput","setInputMessage","sendMessage","inputMessageElement","inputMessage","onSubmit","onChange","e","target","value","handleInputChange","required","type","name","placeholder","ChatBox","user","React","useState","setMessages","useRef","scrollChatToBottom","current","scrollTop","scrollHeight","preventDefault","Date","fetch","method","body","JSON","stringify","headers","then","data","json","console","log","focus","App","fluid","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.23d05432.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-title\">\n        <div className=\"header-title__logo\">\n          <svg width=\"41\" height=\"36\" viewBox=\"0 0 41 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M40.4729 18.0041C40.4729 15.3262 37.1153 12.7883 31.9675 11.2145C33.1555 5.97391 32.6275 1.80453 30.3011 0.469672C29.7649 0.156557 29.1379 0.00823975 28.4532 0.00823975V1.84573C28.8326 1.84573 29.1379 1.91989 29.3936 2.05997C30.5156 2.70268 31.0023 5.14992 30.6228 8.29755C30.5321 9.0721 30.3836 9.88785 30.2021 10.7201C28.5851 10.3246 26.8197 10.0197 24.9635 9.82193C23.8498 8.29755 22.6949 6.91325 21.5317 5.70199C24.2211 3.20531 26.7455 1.83749 28.4614 1.83749V0C26.1927 0 23.2229 1.61502 20.22 4.41657C17.2171 1.6315 14.2472 0.0329596 11.9785 0.0329596V1.87045C13.6862 1.87045 16.2189 3.23003 18.9083 5.71023C17.7533 6.92149 16.5984 8.29755 15.5012 9.82193C13.6367 10.0197 11.8713 10.3246 10.2544 10.7283C10.0646 9.90433 9.92437 9.10506 9.82537 8.33875C9.43764 5.19112 9.91612 2.74388 11.0298 2.09293C11.2773 1.94461 11.5991 1.87869 11.9785 1.87869V0.0411994C11.2856 0.0411994 10.6586 0.189517 10.1141 0.502632C7.79595 1.83749 7.27622 5.99863 8.47242 11.2227C3.34112 12.8048 0 15.3344 0 18.0041C0 20.6821 3.35762 23.22 8.50542 24.7938C7.31747 30.0343 7.84545 34.2037 10.1719 35.5386C10.7081 35.8517 11.3351 36 12.028 36C14.2967 36 17.2666 34.385 20.2695 31.5834C23.2724 34.3685 26.2422 35.967 28.5109 35.967C29.2039 35.967 29.8309 35.8187 30.3753 35.5056C32.6935 34.1707 33.2132 30.0096 32.017 24.7855C37.1318 23.2117 40.4729 20.6738 40.4729 18.0041ZM29.7319 12.5081C29.4266 13.5711 29.0471 14.667 28.6181 15.7629C28.2799 15.1037 27.9252 14.4445 27.5374 13.7853C27.158 13.1261 26.7537 12.4834 26.3495 11.8572C27.5209 12.0302 28.6511 12.2444 29.7319 12.5081ZM25.9535 21.2836C25.31 22.396 24.6501 23.4507 23.9653 24.4312C22.7361 24.5383 21.4904 24.596 20.2365 24.596C18.9908 24.596 17.7451 24.5383 16.5241 24.4395C15.8394 23.4589 15.1712 22.4125 14.5277 21.3083C13.9007 20.2289 13.3315 19.133 12.8118 18.0288C13.3232 16.9247 13.9007 15.8206 14.5194 14.7411C15.1629 13.6287 15.8229 12.574 16.5076 11.5935C17.7368 11.4864 18.9825 11.4287 20.2365 11.4287C21.4822 11.4287 22.7279 11.4864 23.9488 11.5853C24.6336 12.5658 25.3018 13.6123 25.9453 14.7164C26.5722 15.7958 27.1415 16.8917 27.6612 17.9959C27.1415 19.1 26.5722 20.2042 25.9535 21.2836ZM28.6181 20.2124C29.0636 21.3165 29.4431 22.4207 29.7566 23.4919C28.6759 23.7555 27.5374 23.978 26.3577 24.1511C26.762 23.5166 27.1662 22.8656 27.5457 22.1982C27.9252 21.539 28.2799 20.8716 28.6181 20.2124ZM20.253 29.0043C19.4858 28.2133 18.7185 27.3317 17.9596 26.3676C18.702 26.4005 19.461 26.4253 20.2282 26.4253C21.0037 26.4253 21.7709 26.4088 22.5216 26.3676C21.7792 27.3317 21.0119 28.2133 20.253 29.0043ZM14.1152 24.1511C12.9438 23.978 11.8135 23.7638 10.7328 23.5001C11.0381 22.4372 11.4176 21.3413 11.8465 20.2454C12.1848 20.9046 12.5395 21.5637 12.9273 22.2229C13.315 22.8821 13.711 23.5248 14.1152 24.1511ZM20.2117 7.00389C20.9789 7.79492 21.7462 8.67658 22.5051 9.64065C21.7627 9.60769 21.0037 9.58297 20.2365 9.58297C19.461 9.58297 18.6938 9.59945 17.9431 9.64065C18.6855 8.67658 19.4528 7.79492 20.2117 7.00389ZM14.107 11.8572C13.7027 12.4916 13.2985 13.1426 12.919 13.81C12.5395 14.4692 12.1848 15.1284 11.8465 15.7876C11.4011 14.6835 11.0216 13.5793 10.7081 12.5081C11.7888 12.2527 12.9273 12.0302 14.107 11.8572ZM6.641 22.1735C3.72061 20.9293 1.83143 19.2978 1.83143 18.0041C1.83143 16.7105 3.72061 15.0707 6.641 13.8347C7.35047 13.5299 8.12594 13.258 8.92616 13.0025C9.39639 14.6175 10.0151 16.2985 10.7823 18.0206C10.0234 19.7345 9.41289 21.4072 8.95091 23.014C8.13419 22.7585 7.35872 22.4784 6.641 22.1735ZM11.0793 33.9483C9.95737 33.3056 9.47064 30.8583 9.85012 27.7107C9.94087 26.9361 10.0894 26.1204 10.2709 25.2882C11.8878 25.6837 13.6532 25.9886 15.5094 26.1863C16.6231 27.7107 17.7781 29.095 18.9413 30.3062C16.2519 32.8029 13.7275 34.1707 12.0115 34.1707C11.6403 34.1625 11.3268 34.0883 11.0793 33.9483ZM30.6476 27.6695C31.0353 30.8171 30.5568 33.2644 29.4431 33.9153C29.1956 34.0636 28.8739 34.1295 28.4944 34.1295C26.7867 34.1295 24.2541 32.77 21.5647 30.2898C22.7196 29.0785 23.8746 27.7024 24.9718 26.1781C26.8362 25.9803 28.6016 25.6754 30.2186 25.2717C30.4083 26.1039 30.5568 26.9032 30.6476 27.6695ZM33.8237 22.1735C33.1142 22.4784 32.3388 22.7503 31.5385 23.0057C31.0683 21.3907 30.4496 19.7098 29.6824 17.9876C30.4413 16.2737 31.0518 14.6011 31.5138 12.9943C32.3305 13.2497 33.106 13.5299 33.8319 13.8347C36.7523 15.079 38.6415 16.7105 38.6415 18.0041C38.6333 19.2978 36.7441 20.9375 33.8237 22.1735Z\" fill=\"#61DAFB\"/>\n            <path d=\"M20.2282 21.7698C22.3104 21.7698 23.9983 20.0839 23.9983 18.0042C23.9983 15.9245 22.3104 14.2386 20.2282 14.2386C18.1461 14.2386 16.4581 15.9245 16.4581 18.0042C16.4581 20.0839 18.1461 21.7698 20.2282 21.7698Z\" fill=\"#61DAFB\"/>\n          </svg>\n        </div>\n        <div className=\"header-title__heading\">\n          <p>\n            FAQ Covid<br/>\n            <span>Posez des questions simple sur la Covid19</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React from \"react\"\n\nconst ChatOnline = ({ online }) => {\n  return (\n    <div className='chat-online'>\n    </div>\n  )\n}\n\nexport default ChatOnline","import React from 'react'\n\nconst ChatContent = ({ chatContentElement, messages }) => {\n  return (\n    <div ref={chatContentElement} className=\"chat-content\">\n      {messages.map((client, i) => {\n        return (\n          <div key={i}>\n            {client.date !== null ? <div className='message'>\n              <div className=\"message-username\">\n                <p>\n                  {client.username}\n                  <span>{client.date}</span>\n                </p>\n              </div>\n              <div className=\"message-text\">\n                {client.message}\n              </div>\n            </div> : <div className='info'>\n              <span>{client.message}</span>\n            </div>}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChatContent","import React from \"react\"\n\nconst ChatInput = ({ setInputMessage, sendMessage, inputMessageElement, inputMessage }) => {\n\n  const handleInputChange = e => {\n    setInputMessage(e.target.value)\n  }\n\n  return (\n    <div className=\"chat-input\">\n      <form onSubmit={sendMessage}>\n        <input ref={inputMessageElement} onChange={(e) => handleInputChange(e)} value={inputMessage} required type=\"text\" name='message' placeholder='Posez votre question...'/>\n        <button>\n          <svg width=\"25\" height=\"23\" viewBox=\"0 0 25 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M23.5111 9.27032L3.34053 0.900689C2.49077 0.548052 1.53076 0.703179 0.835207 1.30533C0.139651 1.90757 -0.151267 2.8355 0.0760766 3.72696L1.87144 10.7676H10.6618C11.0663 10.7676 11.3942 11.0955 11.3942 11.5001C11.3942 11.9045 11.0663 12.2325 10.6618 12.2325H1.87144L0.0760766 19.2731C-0.151267 20.1646 0.139602 21.0925 0.835207 21.6947C1.53218 22.2981 2.49229 22.4513 3.34058 22.0994L23.5112 13.7298C24.4295 13.3487 25 12.4943 25 11.5001C25 10.5058 24.4295 9.65132 23.5111 9.27032Z\" fill=\"#0070F3\"/>\n          </svg>\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChatInput","import React from 'react';\nimport { socket } from '../../App'\nimport Header from './Header/Header'\nimport ChatOnline from \"./ChatOnline/ChatOnline\";\nimport ChatContent from './ChatContent/ChatContent'\nimport ChatInput from \"./ChatInput/ChatInput\"\nimport './ChatBox.scss'\n\nconst ChatBox = ({ user }) => {\n  const [online, setOnline] = React.useState(0)\n  const [inputMessage, setInputMessage] = React.useState('')\n  const [messages, setMessages] = React.useState([])\n\n  const chatContentElement = React.useRef(null)\n  const inputMessageElement = React.useRef(null)\n\n  const sendMessage = e => {\n    e.preventDefault()\n    const message = e.target.value\n    const date = new Date()\n\n    setMessages(messages => ([...messages,  {message:inputMessage, username:\"Utilisateur\", date: \"\"}]))\n\n    fetch(\"http://127.0.0.1:5000/ask\", {\n        method: \"POST\",\n        body: JSON.stringify({message: inputMessage}),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(data => data.json())\n    .then(data => {\n        console.log(\"data\", data)\n        setMessages(messages => ([...messages,  {message:data[\"message\"], username:\"FAQ Covid\", date: \"\"}]))\n        scrollChatToBottom(chatContentElement)\n        inputMessageElement.current.focus()\n        setInputMessage('')\n    })\n  }\n\n  const scrollChatToBottom = (chatContentElement) => chatContentElement.current.scrollTop = chatContentElement.current.scrollHeight\n\n  return (\n    <div className=\"chat\">\n      <Header />\n      <ChatOnline online={online} />\n      <ChatContent chatContentElement={chatContentElement} messages={messages} />\n      <ChatInput\n        inputMessageElement={inputMessageElement}\n        inputMessage={inputMessage}\n        setInputMessage={setInputMessage}\n        sendMessage={sendMessage}\n      />\n    </div>\n  )\n}\n\nexport default ChatBox","import React from 'react';\nimport { Grid, Row, Col } from \"react-flexbox-grid\"\nimport ChatBox from './components/ChatBox/ChatBox'\n\nconst App = () => {\n  return (\n    <Grid fluid>\n      <Row>\n        <Col xs={12}>\n          <ChatBox user={\"User\"} />\n        </Col>\n      </Row>\n    </Grid>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'normalize.css'\nimport './styles/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}